import { imm_set, imm_html as h, imm_raf } from 'imm-dom'
import { ItmElement } from './itm_utils.jsy'


export class ITMContent extends ItmElement ::
  async connectedCallback() ::
    let key = this.getAttribute('k')
    let dep_module = this.getAttribute('dep')
    let mime = this.getAttribute('mime')

    let _store_ = await this.itm_store()
    let content = _store_.content_at(key, mime)

    let view_fn
    if dep_module ::
      dep_module = await _store_.content_url_at(dep_module, 'text/javascript')
      dep_module = await import(/* @vite-ignore */ dep_module)
      view_fn = dep_module.find_view_for?.({mime, content})
      view_fn ??= dep_module.view_for

    if ! view_fn ::
      let _view_ = await this.itm_view()
      view_fn = _view_.find_view_for({mime, content})

    content = await content
    if ! content ::
      return imm_set @ this.shadowRoot,
        h.pre @ `<!-- contentNotFound: ${mime} ${key} -->`,

    view_fn = await view_fn
    if ! view_fn ::
      return imm_set @ this.shadowRoot,
        h.pre @ `<!-- viewNotFound: ${mime} ${key} -->`,

    imm_set @ this.shadowRoot, h.slot()
    imm_set @ this, await view_fn(await content, {key, mime, h})

