import { itm_context } from './itm_context.jsy'

export const itm_dynamic = @{}
  __proto__: itm_context

  async find_mime(mime=this.wc.getAttribute('mime')) ::
    while 1 ::
      let mimeview = this.itm_disco('itm_find_mimeview')
      if mimeview ::
        return mimeview.get(mime)

      if ! await this.itm_disco_update() :: return

  async wc_connect() ::
    let content = this.load_content()
    this.render_loading(content, this)
    await this.render_view(await content, this)

  wc_disconnect() ::
    this.wc.textContent = '' // clear body

  render_loading(content, ctx) ::
    let wc = ctx.wc
    let msg = `loading ${wc.getAttribute('mime') || '??'} ${wc.getAttribute('k')}`
    let el = ctx.imtiny('pre', {class: 'itm-loading'}, msg)
    wc.append(el)

  async render_view(content, ctx) ::
    let wc = ctx.wc
    let view_fn = ctx.view_for ?? ctx.find_mime()
    if view_fn?.then :: view_fn = await view_fn

    if ! wc.signal.aborted ::
      let el = view_fn.call(ctx, content, ctx)
      if el?.then :: el = await el
      wc.textContent = ''
      wc.append(el)

