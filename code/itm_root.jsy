import { _itm_ctx_ } from './itm_utils.jsy'
import { itm_import_attrs } from './itm_import.jsy'
import { ItmDisco } from './itm_disco.jsy'
import { ItmElement } from './itm_element.jsy'

export class ItermusingRoot extends ItmElement ::
  async _itm_conn({signal}) ::
    let {stg, viewmap} = this
    this.stg = stg = await stg

    let ctx = _itm_ctx_.with({elem: this, stg, viewmap})
    for await let [attr, module] of itm_import_attrs(this, stg) ::
      module = await module
      await module?.itm_root?.(ctx)

    if ! signal.aborted ::
      ItmDisco.register(this, this._on_itm_disco?.bind(this))

  _on_itm_disco(disco) ::
    let {stg, viewmap} = this
    if stg :: disco.stg ??= stg
    if viewmap :: disco.viewmaps.push(viewmap)

