
const _as_attr_match = test => test.call ? test
  : test.exec ? attr => test.exec(attr)
  : test.test ? attr => test.test(attr)
  : test.includes ? attr => test.includes(attr)
  : attr => attr == test

export function * itm_attrs(elem, test, test_init) ::
  test = _as_attr_match(test)
  test_init &&= _as_attr_match(test_init)

  for let attr of elem.getAttributeNames() ::
    let init = test_init(attr)
    if init || test(attr) ::
      let res = [attr, elem.getAttribute(attr)]
      if init :: elem.removeAttribute(attr)
      yield res


