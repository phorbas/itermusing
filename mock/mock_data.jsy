import { opaque_basic as opaque } from '@phorbas/opaque'
import {imm_html as h} from 'imm-dom'

export async function itermuse(ctx) ::
  const stg = ctx.stg
  ctx.base.h = h

  console.log @ 'MOCK DATA', ctx

  async function _store_new(content) ::
    let hk21 = await opaque.from_content(content)
    let key = `kbc:/dom/${hk21[1]}`
    await stg.kbc_store(key, hk21.buf)
    let rt_buf = await stg.kbc_fetch(key)
    //console.log @# key, rt_buf, hk21
    return key

  let hk1_hello = await _store_new @
    'hello there boot!'

  let hk1_html = await _store_new @ `\
    <section>
    <h3>Blah</h3>

    <p>So much blah blah blah</p>
    </section>
    `

  let hk1_markdown = await _store_new @ `\
    # Bonjour
    This is some markdown content
    `

  let hk1_md_other = await _store_new @ `\
    # Salut
    Markdown again
    `

  let hk1_zero_md_view = await _store_new @ `\
    import "https://cdn.jsdelivr.net/npm/zero-md@3?register"
    console.log("Registered zero-md!")

    export function itermuse(ctx_view) {
      ctx_view.view_for = async (content, {h}) => {
        content = await (await content)?.text()
        return h.zero_md(
          h.script({
            type: 'text/markdown',
            $:'' + content}) )
      }
    }
    `
  let hk1_md_block_view = await _store_new @ `\
    import "https://md-block.verou.me/md-block.js"
    console.log("Registered md-block!")

    export function itermuse(ctx_view) {
      ctx_view.view_for = async (content, {h}) => {
        content = await (await content)?.text()
        return h.md_block('' + content)
      }
    }
    `

  let hk1_amazing = await _store_new @ `\
    export const itermuse = ctx => ctx.with({
        view_for: (_, {h}) => h.h2('Amazing!'),
      })
    `

  console.log @ 'MOCK DATA DONE', @{}
    hk1_hello
    hk1_html
    hk1_amazing
    hk1_markdown
    hk1_md_other
    hk1_md_block_view
    hk1_zero_md_view


